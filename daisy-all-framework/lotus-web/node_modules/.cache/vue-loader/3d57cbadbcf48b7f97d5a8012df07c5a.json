{"remainingRequest":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hq_ly/mhjy/mhjy_manager/src/views/permission/page.vue?vue&type=style&index=0&id=7a21c825&lang=scss&scoped=true&","dependencies":[{"path":"/Users/hq_ly/mhjy/mhjy_manager/src/views/permission/page.vue","mtime":1660376339949},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1655715156000},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFwcC1jb250YWluZXIgewogIC5yb2xlcy10YWJsZSB7CiAgICBtYXJnaW4tdG9wOiAzMHB4OwogIH0KCiAgLnBlcm1pc3Npb24tdHJlZSB7CiAgICBtYXJnaW4tYm90dG9tOiAzMHB4OwogIH0KCiAgLmNvbXBvbmVudC1pdGVtIHsKICAgIG1pbi1oZWlnaHQ6IDEwMHB4OwogIH0KCiAgLmljb25MaXN0IHsKICAgIG92ZXJmbG93LXk6IHNjcm9sbDsgLy956L205pi+56S65rua5Yqo5p2hCiAgICBvdmVyZmxvdy14OiBoaWRkZW47IC8veOi9tOa6ouWHuumakOiXjwogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOwogICAgZmxleC13cmFwOiB3cmFwOyAvL+S4gOWumuimgeaNouihjAoKICAgIGkgewogICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgIHdpZHRoOiA2MHB4OwogICAgICBoZWlnaHQ6IDQ1cHg7CiAgICAgIGNvbG9yOiAjMDAwMDAwOwogICAgICBmb250LXNpemU6IDIwcHg7CiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNFNkU2RTY7CiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgIGxpbmUtaGVpZ2h0OiA0NXB4OwogICAgICBtYXJnaW46IDVweDsKCiAgICAgICY6aG92ZXIgewogICAgICAgIGNvbG9yOiAjZjVkZTAwOwogICAgICAgIGJvcmRlci1jb2xvcjogI2Y1ZGUwMDsKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["page.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAybA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"page.vue","sourceRoot":"src/views/permission","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-row :gutter=\"12\" style=\"margin-top:30px;\">\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"box-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>菜单列表</span>\r\n          </div>\r\n          <div class=\"filter-container\">\r\n            <el-input v-model=\"filterText\" placeholder=\"输入搜索关键字\" style=\"width: 200px;margin-right: 10px;\"\r\n              class=\"filter-item\" />\r\n            <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" @click=\"handleReset\">\r\n              重置\r\n            </el-button>\r\n            <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" @click=\"handleAdd\">\r\n              新增\r\n            </el-button>\n            <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" @click=\"handleEdit\">\n              编辑\n            </el-button>\r\n            <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" @click=\"handleDelete\">\r\n              删除\r\n            </el-button>\r\n          </div>\r\n          <div>\r\n            <el-form :model=\"role\">\r\n              <el-tree ref=\"tree\" :check-strictly=\"checkStrictly\" :data=\"routesData\" :props=\"defaultProps\"\r\n                :accordion=\"false\" default-expand-all :highlight-current=\"true\" :expand-on-click-node=\"false\"\r\n                show-checkbox node-key=\"id\" class=\"permission-tree\" @node-click=\"nodeClick\"\r\n                :filter-node-method=\"filterNode\" empty-text=\"暂无数据\" />\r\n            </el-form>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"box-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>新增菜单</span>\r\n          </div>\r\n          <div>\r\n            <el-form :model=\"menu\">\r\n              <el-form-item prop=\"parentid\" label=\"上级ID\" label-width=\"100px\" label-position=\"left\">\r\n                <el-input disabled style=\"width: 200px;\" v-model=\"menu.parentid\" placeholder=\"上级ID\"></el-input>\r\n                <el-button style=\"margin-left: 10px;\" type=\"primary\" @click=\"resetParentId\" icon=\"search\">重置\r\n                </el-button>\r\n              </el-form-item>\r\n              <el-form-item prop=\"path\" label=\"路由URI\" label-width=\"100px\" label-position=\"left\">\r\n                <el-input v-model=\"menu.path\" placeholder=\"路由URI\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item prop=\"component\" label=\"视图URI\" label-width=\"100px\" label-position=\"left\">\r\n                <el-input :disabled=\"menu.parentid==0\" v-model=\"menu.component\" placeholder=\"视图URI\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item prop=\"hidden\" label=\"是否隐藏\" label-width=\"100px\" label-position=\"left\">\r\n                <el-checkbox v-model=\"menu.hidden\" label=\"不显示在菜单栏\" :true-label=\"1\" :false-label=\"0\"\r\n                  @change=\"handleCheckHidden\"></el-checkbox>\r\n              </el-form-item>\r\n              <el-form-item prop=\"redirect\" label=\"重定向URI\" label-width=\"100px\" label-position=\"left\">\r\n                <el-input v-model=\"menu.redirect\" placeholder=\"重定向URI\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item prop=\"alwaysShow\" label=\"一直显示\" label-width=\"100px\" label-position=\"left\">\r\n                <el-checkbox v-model=\"menu.alwaysShow\" label=\"一个子菜单时,也展示父菜单\" :true-label=\"1\" :false-label=\"0\"\r\n                  @change=\"handleCheckAlwaysShow\"></el-checkbox>\r\n              </el-form-item>\r\n              <el-form-item prop=\"name\" label=\"*路由名称\" label-width=\"100px\" label-position=\"left\">\r\n                <el-input v-model=\"menu.name\" placeholder=\"路由名称\"></el-input>\r\n              </el-form-item>\r\n\r\n              <el-form-item prop=\"title\" label=\"*菜单名称\" label-width=\"100px\" label-position=\"left\">\r\n                <el-input v-model=\"menu.title\" placeholder=\"菜单名称\"></el-input>\r\n              </el-form-item>\r\n\r\n              <el-form-item prop=\"icon\" label=\"ICON\" label-width=\"100px\" label-position=\"left\">\r\n                <el-input disabled v-model=\"menu.icon\" placeholder=\"图标\" style=\"width: 200px;\"></el-input>\r\n                <el-button style=\"margin-left: 10px;\" type=\"primary\" @click=\"selectIcon\" icon=\"search\">选择</el-button>\r\n              </el-form-item>\r\n              <el-form-item prop=\"noCache\" label=\"是否缓存\" label-width=\"100px\" label-position=\"left\">\r\n                <el-checkbox v-model=\"menu.noCache\" :true-label=\"1\" :false-label=\"0\" @change=\"handleCheckNoCache\">\r\n                </el-checkbox>\r\n              </el-form-item>\r\n              <el-form-item prop=\"breadcrumb\" label=\"展示面包屑中\" label-width=\"100px\" label-position=\"left\">\r\n                <el-checkbox v-model=\"menu.breadcrumb\" :true-label=\"1\" :false-label=\"0\" @change=\"handleCheckBreadcrumb\">\r\n                </el-checkbox>\r\n              </el-form-item>\r\n              <el-form-item prop=\"affix\" label=\"固定在顶部\" label-width=\"100px\" label-position=\"left\">\r\n                <el-checkbox v-model=\"menu.affix\" :true-label=\"1\" :false-label=\"0\" @change=\"handleCheckAffix\">\r\n                </el-checkbox>\r\n              </el-form-item>\r\n              <el-form-item prop=\"activeMenu\" label=\"高亮侧边栏\" label-width=\"100px\" label-position=\"left\">\r\n                <el-input v-model=\"menu.activeMenu\" placeholder=\"高亮侧边栏(选填)\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item prop=\"enable\" label=\"状态\" label-width=\"100px\" label-position=\"left\">\r\n                <el-radio-group v-model=\"menu.enable\" size=\"small\" @change=\"changeEnable\" fill=\"#66b1ff\">\r\n                  <el-radio :label=\"1\">启用</el-radio>\r\n                  <el-radio :label=\"0\">禁用</el-radio>\r\n                </el-radio-group>\r\n              </el-form-item>\r\n              <el-form-item prop=\"sort\" label=\"排序\" label-width=\"100px\" label-position=\"left\">\r\n                <el-input type=\"number\" min=\"1\" v-model=\"menu.sort\"\r\n                  style=\"width: 100px;margin-left: 5px;margin-right: 5px;\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n          </div>\r\n          <div style=\"text-align:center;\">\r\n            <el-button type=\"primary\" @click=\"confirmAdd\">提交</el-button>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-dialog :visible.sync=\"dialogVisible\" title=\"选择图标\">\r\n      <div class=\"iconList\">\r\n        <i v-for=\"item in iconList\" :key=\"item\" :class=\"item\" @click=\"sureIcon(item)\" style=\"font-size:20px\"></i>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import path from 'path'\r\n  import {\r\n    deepClone\r\n  } from '@/utils'\r\n  import {\r\n    getToken,\r\n    setToken,\r\n    removeToken\r\n  } from '@/utils/auth'\n\r\n  import checkPermission from '@/utils/permission' // 权限判断函数\r\n  import PanThumb from '@/components/PanThumb'\r\n  import MdInput from '@/components/MDinput'\r\n  import Mallki from '@/components/TextHoverEffect/Mallki'\r\n  import DropdownMenu from '@/components/Share/DropdownMenu'\r\n  import waves from '@/directive/waves/index.js' // 水波纹指令\r\n  import {\r\n    elementIcons\r\n  } from '@/utils/icon'\r\n\r\n  const defaultRole = {\r\n    id: 0,\r\n    name: '',\r\n    intro: '',\r\n    routes: []\r\n  }\r\n\r\n  export default {\r\n    name: 'ComponentMixinDemo',\r\n    components: {\r\n      PanThumb,\r\n      MdInput,\r\n      Mallki,\r\n      DropdownMenu,\r\n    },\r\n    directives: {\r\n      waves\r\n    },\r\n    watch: {\r\n      filterText(val) {\r\n        this.$refs.tree.filter(val);\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        role: Object.assign({}, defaultRole),\r\n        routes: [],\r\n        dialogVisible: false,\r\n        checkStrictly: false,\r\n        defaultProps: {\r\n          children: 'children',\r\n          label: 'title',\r\n          title: 'title',\r\n          id: 0\r\n        },\r\n        filterText: '',\n        clickMenu: {\n          id:0,\n          title:'根菜单'\n        },\n        defaultMenu: {\n          id: 0,\n          parentid: 0,\n          path: '',\n          component: 'layout',\n          hidden: 0,\n          redirect: '',\n          alwaysShow: 0,\n          name: '',\n          title: '',\n          icon: '',\n          activeMenu: '',\n          noCache: 0,\n          breadcrumb: 1,\n          affix: 0,\n          enable: 1,\n          sort: 1\n        },\r\n        menu: {\n          id: 0,\r\n          parentid: 0,\r\n          path: '',\r\n          component: 'layout',\r\n          hidden: 0,\r\n          redirect: '',\r\n          alwaysShow: 0,\r\n          name: '',\r\n          title: '',\r\n          icon: '',\r\n          activeMenu: '',\r\n          noCache: 0,\r\n          breadcrumb: 1,\r\n          affix: 0,\r\n          enable: 1,\r\n          sort: 1\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      routesData() {\r\n        return this.routes\r\n      }\r\n    },\r\n    created() {\r\n      // Mock: get all routes and roles list from server\r\n      this.getRoutes()\r\n      this.iconList = elementIcons\r\n    },\r\n    methods: {\r\n      checkPermission,\r\n      async getRoutes() {\r\n        const res = await this.api.role().getRoutes()\r\n        this.serviceRoutes = res.data\r\n\r\n        this.routes = this.generateRoutes(res.data)\r\n      },\r\n\r\n      nodeClick(val) {\n        this.clickMenu = val\n        this.menu = this.defaultMenu\r\n      },\r\n\r\n      filterNode(value, data) {\r\n        if (!value) return true\r\n        return data.label.includes(value)\r\n      },\r\n      handleReset() {\r\n        this.filterText = ''\r\n      },\r\n\r\n      handleAdd() {\r\n        let title = '确定新增【' + this.clickMenu.title + '】的子菜单？'\r\n        this.$confirm(title, '提示', {\r\n            confirmButtonText: '确认',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          })\r\n          .then(() => {\n            this.menu = this.defaultMenu\r\n            this.menu.parentid = this.clickMenu.id\n            if (this.menu.parentid == 0) {\n              this.menu.component = 'layout'\n            } else {\n              this.menu.component = ''\n            }\r\n          })\r\n          .catch(err => {\r\n            console.error(err)\r\n          })\r\n      },\n\n      handleEdit() {\n        let title = '确定编辑【' + this.clickMenu.title + '】菜单？'\n        this.$confirm(title, '提示', {\n            confirmButtonText: '确认',\n            cancelButtonText: '取消',\n            type: 'warning'\n          })\n          .then(() => {\n            this.menu = this.clickMenu\n            this.menu.parentid = this.clickMenu.id\n          })\n          .catch(err => {\n            console.error(err)\n          })\n      },\r\n\r\n      resetParentId() {\r\n        this.menu = this.defaultMenu\n        this.menu.parentid = 0\n        this.menu.component = 'layout'\r\n      },\r\n      handleCheckHidden(val) {\r\n        this.menu.hidden = val\r\n      },\r\n      handleCheckAlwaysShow(val) {\r\n        this.menu.alwaysShow = val\r\n      },\r\n      handleCheckNoCache(val) {\r\n        this.menu.noCache = val\r\n      },\r\n      handleCheckBreadcrumb(val) {\r\n        this.menu.breadcrumb = val\r\n      },\r\n      handleCheckAffix(val) {\r\n        this.menu.affix = val\r\n      },\r\n      changeEnable(enable) {\r\n        this.menu.enable = enable\r\n      },\r\n      selectIcon() {\r\n        this.dialogVisible = true\r\n      },\r\n      sureIcon(item) {\r\n        this.menu.icon = item\r\n        this.dialogVisible = false\r\n      },\r\n\r\n      async confirmAdd() {\n        var isEdit = false\n        let menuId = this.menu.id\n        if (menuId != 0) {\n          isEdit = true\n        }\n        if (isEdit) {\n          let res = await this.api.menu().editSysRoute(this.menu)\n          if (res.code == 1) {\n            this.$message.success('菜单编辑成功')\n            this.menu = this.defaultMenu;\n            this.getRoutes()\n          } else {\n            this.$message.error(res.msg + '')\n          }\n        } else {\n          let res = await this.api.menu().addSysRoute(this.menu)\n          if (res.code == 1) {\n            this.$message.success('菜单新增成功')\n            this.menu = this.defaultMenu;\n            this.getRoutes()\n          } else {\n            this.$message.error(res.msg + '')\n          }\n        }\r\n      },\n\n      handleDelete() {\n        const checkedKeys = this.$refs.tree.getCheckedKeys()\n        let ids = checkedKeys.join(',');\n        let obj = {\n          'ids': ids\n        }\n        if (checkedKeys.length == 0) {\n          this.$message.info('请先选择待删除的菜单')\n        } else {\n          this.$confirm('确定删除选中的菜单?', '提示', {\n              confirmButtonText: '确认',\n              cancelButtonText: '取消',\n              type: 'warning'\n            })\n            .then( async () => {\n              let res = await this.api.menu().delSysRoute(obj)\n              if (res.code == 1) {\n                this.$message.success('菜单删除成功')\n                this.menu = this.defaultMenu;\n                this.getRoutes()\n              } else {\n                this.$message.error(res.msg + '')\n              }\n            })\n            .catch(err => {\n              console.error(err)\n            })\n        }\n      },\r\n\r\n      // Reshape the routes structure so that it looks the same as the sidebar\r\n      generateRoutes(routes, basePath = '/') {\r\n        const res = []\r\n\r\n        for (let route of routes) {\r\n          // skip some route\r\n          if (route.hidden) {\r\n            continue\r\n          }\r\n\r\n          // const onlyOneShowingChild = this.onlyOneShowingChild(route.children, route)\r\n\r\n          // if (route.children && onlyOneShowingChild && !route.alwaysShow) {\r\n          //   route = onlyOneShowingChild\r\n          // }\r\n\n          const data = route\n          data.path = route.path//path.resolve(basePath, route.path)\n          data.title = route.title\n          data.label = route.title,\n          data.id = route.id\n\r\n          // const data = {\r\n          //   path: path.resolve(basePath, route.path),\r\n          //   title: route.title,\r\n          //   label: route.title,\r\n          //   id: route.id\r\n          // }\r\n\r\n          // recursive child routes\r\n          if (route.children) {\r\n            data.children = this.generateRoutes(route.children, data.path)\r\n          }\r\n          res.push(data)\r\n        }\r\n        return res\r\n      },\r\n      // reference: src/view/layout/components/Sidebar/SidebarItem.vue\r\n      onlyOneShowingChild(children = [], parent) {\r\n        let onlyOneChild = null\r\n        const showingChildren = children.filter(item => !item.hidden)\r\n\r\n        // When there is only one child route, the child route is displayed by default\r\n        if (showingChildren.length === 1) {\r\n          onlyOneChild = showingChildren[0]\r\n          onlyOneChild.path = path.resolve(parent.path, onlyOneChild.path)\r\n          return onlyOneChild\r\n        }\r\n\r\n        // Show parent if there are no child route to display\r\n        if (showingChildren.length === 0) {\r\n          onlyOneChild = {\r\n            ...parent,\r\n            path: '',\r\n            noShowingChildren: true\r\n          }\r\n          return onlyOneChild\r\n        }\r\n\r\n        return false\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .app-container {\r\n    .roles-table {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .permission-tree {\r\n      margin-bottom: 30px;\r\n    }\r\n\r\n    .component-item {\r\n      min-height: 100px;\r\n    }\r\n\r\n    .iconList {\r\n      overflow-y: scroll; //y轴显示滚动条\r\n      overflow-x: hidden; //x轴溢出隐藏\r\n      display: flex;\r\n      justify-content: space-around;\r\n      flex-wrap: wrap; //一定要换行\r\n\r\n      i {\r\n        display: inline-block;\r\n        width: 60px;\r\n        height: 45px;\r\n        color: #000000;\r\n        font-size: 20px;\r\n        border: 1px solid #E6E6E6;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        line-height: 45px;\r\n        margin: 5px;\r\n\r\n        &:hover {\r\n          color: #f5de00;\r\n          border-color: #f5de00;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>\n"]}]}