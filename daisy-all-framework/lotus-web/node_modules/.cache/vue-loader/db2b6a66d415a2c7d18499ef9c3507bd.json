{"remainingRequest":"/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/src/views/qiniu/upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/src/views/qiniu/upload.vue","mtime":1657164828470},{"path":"/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAnQC9hcGkvcWluaXUnCi8vIOiOt+WPluS4g+eJm3Rva2VuIOWQjuerr+mAmui/h0FjY2VzcyBLZXksU2VjcmV0IEtleSxidWNrZXTnrYnnlJ/miJB0b2tlbgovLyDkuIPniZvlrpjmlrlzZGsgaHR0cHM6Ly9kZXZlbG9wZXIucWluaXUuY29tL3NkayNvZmZpY2lhbC1zZGsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YU9iajogeyB0b2tlbjogJycsIGtleTogJycgfSwKICAgICAgaW1hZ2VfdXJpOiBbXSwKICAgICAgZmlsZUxpc3Q6IFtdCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBiZWZvcmVVcGxvYWQoKSB7CiAgICAgIGNvbnN0IF9zZWxmID0gdGhpcwogICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICAgIGdldFRva2VuKCkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICBjb25zdCBrZXkgPSByZXNwb25zZS5kYXRhLnFpbml1X2tleQogICAgICAgICAgY29uc3QgdG9rZW4gPSByZXNwb25zZS5kYXRhLnFpbml1X3Rva2VuCiAgICAgICAgICBfc2VsZi5fZGF0YS5kYXRhT2JqLnRva2VuID0gdG9rZW4KICAgICAgICAgIF9zZWxmLl9kYXRhLmRhdGFPYmoua2V5ID0ga2V5CiAgICAgICAgICByZXNvbHZlKHRydWUpCiAgICAgICAgfSkuY2F0Y2goZXJyID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycikKICAgICAgICAgIHJlamVjdChmYWxzZSkKICAgICAgICB9KQogICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["upload.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"upload.vue","sourceRoot":"src/views/qiniu","sourcesContent":["<template>\n  <el-upload :data=\"dataObj\" :multiple=\"true\" :before-upload=\"beforeUpload\" action=\"https://upload.qbox.me\" drag>\n    <i class=\"el-icon-upload\" />\n    <div class=\"el-upload__text\">\n      将文件拖到此处，或<em>点击上传</em>\n    </div>\n  </el-upload>\n</template>\n\n<script>\nimport { getToken } from '@/api/qiniu'\n// 获取七牛token 后端通过Access Key,Secret Key,bucket等生成token\n// 七牛官方sdk https://developer.qiniu.com/sdk#official-sdk\n\nexport default {\n  data() {\n    return {\n      dataObj: { token: '', key: '' },\n      image_uri: [],\n      fileList: []\n    }\n  },\n  methods: {\n    beforeUpload() {\n      const _self = this\n      return new Promise((resolve, reject) => {\n        getToken().then(response => {\n          const key = response.data.qiniu_key\n          const token = response.data.qiniu_token\n          _self._data.dataObj.token = token\n          _self._data.dataObj.key = key\n          resolve(true)\n        }).catch(err => {\n          console.log(err)\n          reject(false)\n        })\n      })\n    }\n  }\n}\n</script>\n"]}]}