{"remainingRequest":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hq_ly/mhjy/mhjy_manager/src/views/permission/directive.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hq_ly/mhjy/mhjy_manager/src/views/permission/directive.vue","mtime":1659938322663},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["directive.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"directive.vue","sourceRoot":"src/views/permission","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-button v-if=\"checkPermission(['admin'])\" type=\"primary\" @click=\"handleAddUser\">新建用户</el-button>\n\n    <el-table :data=\"usersList\" style=\"width: 100%;margin-top:30px;\" border>\n      <el-table-column align=\"center\" label=\"ID\" width=\"50\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.id }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"用户名\" width=\"220\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.username }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"header-center\" label=\"头像\" width=\"120\">\n        <template slot-scope=\"scope\">\n          <img :src=\"scope.row.avatar\" style=\"width: 80px;height: 80px;\" />\n        </template>\n      </el-table-column>\n\n      <el-table-column align=\"center\" label=\"邀请码\" width=\"220\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.attcode }}\n        </template>\n      </el-table-column>\n\n      <el-table-column align=\"center\" label=\"角色\" width=\"220\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.roles|filterRoles }}\n        </template>\n      </el-table-column>\n\n      <el-table-column align=\"center\" label=\"状态\" width=\"120\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.status|filterStatus }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"header-center\" label=\"创建时间\" width=\"220\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.created_time }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"header-center\" label=\"创建人\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.created_by_username }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"header-center\" label=\"更新时间\" width=\"220\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.updated_time }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"header-center\" label=\"更新人\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.updated_by_username }}\n        </template>\n      </el-table-column>\n      <el-table-column v-if=\"checkPermission(['admin'])\" align=\"center\" label=\"操作\" width=\"300\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\">编辑</el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\">删除</el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleResetPWD(scope)\">重置密码</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog :visible.sync=\"dialogVisible\" :title=\"dialogType==='edit'?'编辑用户':'新建用户'\">\n      <el-form :model=\"user\" label-width=\"100px\" label-position=\"left\">\n        <el-form-item label=\"用户名\">\n          <el-input v-model=\"user.username\" placeholder=\"用户名\" />\n        </el-form-item>\n        <el-form-item label=\"头像\">\n          <el-upload\n            :data=\"dataObj\"\n            :multiple=\"false\"\n            :show-file-list=\"false\"\n            :on-success=\"handleImageSuccess\"\n            class=\"image-uploader\"\n            action=\"https://httpbin.org/post\"\n          >\n            <img :src=\"user.avatar+'?imageView2/1/w/80/h/80'\" class=\"image-uploader\" >\n            </img>\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"真实姓名\">\n          <el-input v-model=\"user.name\" placeholder=\"真实姓名\"/>\n        </el-form-item>\n        <el-form-item label=\"手机号\">\n          <el-input v-model=\"user.phone\" placeholder=\"手机号\"/>\n        </el-form-item>\n        <el-form-item label=\"支付宝账号\">\n          <el-input v-model=\"user.alipay\" placeholder=\"支付宝账号\"/>\n        </el-form-item>\n        <el-form-item label=\"角色\">\n          <el-tree\n            ref=\"tree\"\n            :check-strictly=\"checkStrictly\"\n            :data=\"rolesData\"\n            :props=\"defaultProps\"\n            show-checkbox\n            node-key=\"id\"\n            class=\"permission-tree\"\n          />\n        </el-form-item>\n      </el-form>\n      <div style=\"text-align:right;\">\n        <el-button type=\"danger\" @click=\"dialogVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmuser\">提交</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport path from 'path'\nimport { deepClone } from '@/utils'\nimport { getRoles} from '@/api/role'\nimport { getSysUsersList, addSysUser, updateSysUser, delSysUser } from '@/api/user'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\nimport checkPermission from '@/utils/permission' // 权限判断函数\n\nconst defaultUser = {\n  id: 0,\n  username: '',\n  avatar: '',\n  name: '',\n  phone: '',\n  alipay: '',\n  rolesData: []\n}\n\nexport default {\n  data() {\n    return {\n      user: Object.assign({}, defaultUser),\n      roles: [],\n      usersList: [],\n      dataObj: { token: '', key: '' },\n      dialogVisible: false,\n      dialogType: 'new',\n      checkStrictly: false,\n      defaultProps: {\n        label: 'title',\n        title: 'title',\n        id: 0\n      }\n    }\n  },\n  computed: {\n    rolesData() {\n      return this.roles\n    }\n  },\n  filters:{\n    filterStatus(status) {\n      if (status == 1) {\n        return \"正常\"\n      } else if (status == 2) {\n        return \"禁用\"\n      }\n    },\n    filterRoles(roles) {\n      let tmpRoles = []\n      for (var i = 0; i < roles.length; i++) {\n        let role = roles[i]\n        tmpRoles.push(role.name)\n      }\n\n      return tmpRoles.join(',')\n    }\n  },\n  created() {\n    // Mock: get all routes and roles list from server\n    this.getRoles()\n    this.getSysUsersList()\n  },\n  methods: {\n    checkPermission,\n    async getRoles() {\n      const res = await getRoles()\n      let roles = res.data\n      this.roles = this.generateRoles(roles)\n    },\n    async getSysUsersList() {\n      const res = await getSysUsersList({token:getToken()})\n      this.usersList = res.data\n    },\n\n    // Reshape the routes structure so that it looks the same as the sidebar\n    generateRoles(roles) {\n      const res = []\n\n      for (let role of roles) {\n        const data = {\n          title: role.name,\n          label: role.name,\n          id: role.id\n        }\n        res.push(data)\n      }\n      return res\n    },\n\n    generateArr(roles) {\n      let data = []\n      roles.forEach(role => {\n        data.push(role)\n      })\n      return data\n    },\n    handleAddUser() {\n      this.user = Object.assign({}, defaultUser)\n      if (this.$refs.tree) {\n        this.$refs.tree.setCheckedNodes([])\n      }\n      this.dialogType = 'new'\n      this.dialogVisible = true\n    },\n    handleEdit(scope) {\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.user = deepClone(scope.row)\n      this.$nextTick(() => {\n        const roles = this.generateRoles(this.rolesData)\n        this.$refs.tree.setCheckedNodes(this.generateArr(this.user.roles))\n        // set checked state of a node not affects its father and child nodes\n        this.checkStrictly = false\n      })\n    },\n    handleDelete({ $index, row }) {\n      if (row.id == 1) {\n        this.$message({\n          type: 'warning',\n          message: '超级管理员无法删除!'\n        })\n        return\n      }\n      this.$confirm('确定删除此用户?', '提示', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(async() => {\n          await delSysUser({'id':row.id})\n          this.usersList.splice($index, 1)\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          })\n        })\n        .catch(err => { console.error(err) })\n    },\n    async confirmuser() {\n      const isEdit = this.dialogType === 'edit'\n\n      const checkedKeys = this.$refs.tree.getCheckedKeys()\n      this.user.roleIds = checkedKeys.join(',')\n\n      if (isEdit) {\n        const { data } = await updateSysUser(this.user)\n        this.user.roles = data.roles\n        for (let index = 0; index < this.usersList.length; index++) {\n          if (this.usersList[index].id === this.role.id) {\n            this.usersList.splice(index, 1, Object.assign({}, this.role))\n            break\n          }\n        }\n      } else {\n        const { data } = await addSysUser(this.user)\n        this.user.id = data.id\n        this.user.roles = data.roles\n        this.usersList.push(this.user)\n      }\n\n      const { id, username, name } = this.user\n      this.dialogVisible = false\n      this.$notify({\n        title: 'Success',\n        dangerouslyUseHTMLString: true,\n        message: `\n            <div>用户ID: ${id}</div>\n            <div>用户名: ${username}</div>\n            <div>真实姓名: ${name}</div>\n          `,\n        type: 'success'\n      })\n    },\n\n    emitInput(val) {\n      console.log('1/========')\n      console.log(val)\n      this.$emit('input', val)\n    },\n    handleImageSuccess(file) {\n      // console.log('2/========')\n      // console.log(file)\n      // this.emitInput(file.files.file)\n      this.uploadURL(file.files.file)\n    },\n    beforeUpload() {\n      const _self = this\n      return new Promise((resolve, reject) => {\n        getToken().then(response => {\n          const key = response.data.qiniu_key\n          const token = response.data.qiniu_token\n          _self._data.dataObj.token = token\n          _self._data.dataObj.key = key\n          this.tempUrl = response.data.qiniu_url\n          resolve(true)\n        }).catch(err => {\n          console.log(err)\n          reject(false)\n        })\n      })\n    },\n    uploadURL(file) {\n    \tlet that = this\n    \t//注意哦，这里指定文件夹'image/'，尝试过写在配置文件，但是各种不行，写在这里就可以\n    \tvar fileName = 'mhjy/' + 'header' + getFileNameUUID() + '.jpg';\n    \t//定义唯一的文件名，打印出来的uid其实就是时间戳\n    \tclient().multipartUpload(fileName, file, {\n    \t\tprogress: function(percentage, cpt) {\n    \t\t\tconsole.log('打印进度', percentage)\n    \t\t}\n    \t}).then((res) => {\n    \t\t//此处赋值，是相当于上传成功之后，手动拼接服务器地址和文件名\n    \t\tthis.user.avatar = 'https://bzrrmedia.oss-cn-beijing.aliyuncs.com/' + fileName;\n        console.log('++++++++++')\n        console.log(this.user.avatar)\n    \t})\n    },\n\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.app-container {\n  .roles-table {\n    margin-top: 30px;\n  }\n  .permission-tree {\n    margin-bottom: 30px;\n  }\n  .image-uploader {\n    background-color: #5cd7f7;\n    width: 80px;\n    height: 80px;\n    border-radius: 40px;\n    color: #000000;\n  }\n}\n</style>\n"]}]}