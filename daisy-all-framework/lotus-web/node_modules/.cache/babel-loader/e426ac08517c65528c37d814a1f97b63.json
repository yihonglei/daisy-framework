{"remainingRequest":"/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/node_modules/babel-loader/lib/index.js!/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/src/views/permission/directive.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/src/views/permission/directive.vue","mtime":1662348534000},{"path":"/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/babel.config.js","mtime":1657164828000},{"path":"/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/node_modules/vue-loader/lib/index.js","mtime":1655715098000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["deepClone","getToken","setToken","removeToken","client","getFileNameUUID","id","username","avatar","name","phone","alipay","roleIds","rolesData","data","user","roles","usersList","dataObj","token","key","dialogVisible","dialogType","checkStrictly","defaultProps","label","title","computed","filters","filterStatus","status","filterRoles","tmpRoles","created","methods","checkPermission","getRoles","res","getSysUsersList","generateRoles","generateArr","handleAddUser","handleEdit","scope","handleDelete","$index","row","type","message","confirmButtonText","cancelButtonText","then","catch","console","handleResetPWD","confirmuser","isEdit","checkedKeys","index","dangerouslyUseHTMLString","switchChange","obj","beforeUpload","file","httpRequest","url"],"sourceRoot":"src/views/permission","sources":["directive.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-button v-if=\"checkPermission(['admin'])\" type=\"primary\" @click=\"handleAddUser\">新建用户</el-button>\r\n\r\n    <el-table :data=\"usersList\" style=\"width: 100%;margin-top:30px;\" border>\r\n      <el-table-column align=\"center\" label=\"ID\" width=\"50\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.id }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" label=\"用户名\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.username }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"header-center\" label=\"头像\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <img :src=\"scope.row.avatar\" style=\"width: 80px;height: 80px;\" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" label=\"真实姓名\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.name }}\r\n        </template>\r\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"手机号\" width=\"220\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.phone }}\n        </template>\n      </el-table-column>\n\r\n      <el-table-column align=\"center\" label=\"邀请码\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.attcode }}\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column align=\"center\" label=\"角色\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.roles|filterRoles }}\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column align=\"center\" label=\"状态\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.status|filterStatus }}\r\n        </template>\r\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"是否启用\" width=\"220\">\n        <template slot-scope=\"scope\">\n          <el-switch v-model=\"scope.row.status\" :active-value=\"1\" :inactive-value=\"0\"\n            @change=\"switchChange(scope.row)\"></el-switch>\n        </template>\n      </el-table-column>\r\n      <el-table-column align=\"header-center\" label=\"创建时间\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.created_time }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"header-center\" label=\"创建人\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.created_by_username }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"header-center\" label=\"更新时间\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.updated_time }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"header-center\" label=\"更新人\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.updated_by_username }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column fixed=\"right\" v-if=\"checkPermission(['admin'])\" align=\"center\" label=\"操作\" width=\"300\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\">编辑</el-button>\r\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\">删除</el-button>\r\n          <el-button type=\"danger\" size=\"small\" @click=\"handleResetPWD(scope)\">重置密码</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog :visible.sync=\"dialogVisible\" :title=\"dialogType==='edit'?'编辑用户':'新建用户'\">\r\n      <el-form :model=\"user\" label-width=\"100px\" label-position=\"left\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"user.username\" placeholder=\"用户名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"头像\">\r\n          <el-upload :data=\"dataObj\" action=\"\" :multiple=\"false\" :show-file-list=\"false\" :http-request=\"httpRequest\"\r\n            :before-upload=\"beforeUpload\" :limit=\"1\" class=\"image-uploader\">\r\n            <img :src=\"user.avatar+'?imageView2/1/w/80/h/80'\" class=\"image-uploader\">\r\n            </img>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"真实姓名\">\r\n          <el-input v-model=\"user.name\" placeholder=\"真实姓名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\">\r\n          <el-input v-model=\"user.phone\" placeholder=\"手机号\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色\">\r\n          <el-tree ref=\"tree\" :check-strictly=\"checkStrictly\" :data=\"rolesData\" :props=\"defaultProps\" show-checkbox\r\n            node-key=\"id\" class=\"permission-tree\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div style=\"text-align:right;\">\r\n        <el-button type=\"danger\" @click=\"dialogVisible=false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"confirmuser\">提交</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import path from 'path'\r\n  import {\r\n    deepClone\r\n  } from '@/utils'\r\n  import {\r\n    getToken,\r\n    setToken,\r\n    removeToken\r\n  } from '@/utils/auth'\r\n  import checkPermission from '@/utils/permission' // 权限判断函数\r\n  import {\r\n    client,\r\n    getFileNameUUID\r\n  } from '@/utils/alioss.js'\r\n\r\n  const defaultUser = {\r\n    id: 0,\r\n    username: '',\r\n    avatar: '',\r\n    name: '',\r\n    phone: '',\r\n    alipay: '',\n    roleIds: '',\r\n    rolesData: []\r\n  }\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        user: Object.assign({}, defaultUser),\r\n        roles: [],\r\n        usersList: [],\r\n        dataObj: {\r\n          token: '',\r\n          key: ''\r\n        },\r\n        dialogVisible: false,\r\n        dialogType: 'new',\r\n        checkStrictly: false,\r\n        defaultProps: {\r\n          label: 'title',\r\n          title: 'title',\r\n          id: 0\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      rolesData() {\r\n        return this.roles\r\n      }\r\n    },\r\n    filters: {\r\n      filterStatus(status) {\r\n        if (status == 1) {\r\n          return \"正常\"\r\n        } else {\r\n          return \"禁用\"\r\n        }\r\n      },\r\n      filterRoles(roles) {\r\n        let tmpRoles = []\r\n        for (var i = 0; i < roles.length; i++) {\r\n          let role = roles[i]\r\n          tmpRoles.push(role.name)\r\n        }\r\n\r\n        return tmpRoles.join(',')\r\n      }\r\n    },\r\n    created() {\r\n      // Mock: get all routes and roles list from server\r\n      this.getRoles()\r\n      this.getSysUsersList()\r\n    },\r\n    methods: {\r\n      checkPermission,\r\n      async getRoles() {\r\n        const res = await this.api.role().getRoles()\r\n        let roles = res.data\r\n        this.roles = this.generateRoles(roles)\r\n      },\r\n      async getSysUsersList() {\r\n        const res = await this.api.user().getSysUsersList({\r\n          token: getToken()\r\n        })\r\n        this.usersList = res.data\r\n      },\r\n\r\n      // Reshape the routes structure so that it looks the same as the sidebar\r\n      generateRoles(roles) {\r\n        const res = []\r\n\r\n        for (let role of roles) {\r\n          const data = {\r\n            title: role.name,\r\n            label: role.name,\r\n            id: role.id\r\n          }\r\n          res.push(data)\r\n        }\r\n        return res\r\n      },\r\n\r\n      generateArr(roles) {\r\n        let data = []\r\n        roles.forEach(role => {\r\n          data.push(role)\r\n        })\r\n        return data\r\n      },\r\n      handleAddUser() {\r\n        this.user = Object.assign({}, defaultUser)\r\n        if (this.$refs.tree) {\r\n          this.$refs.tree.setCheckedNodes([])\r\n        }\r\n        this.dialogType = 'new'\r\n        this.dialogVisible = true\r\n      },\r\n      handleEdit(scope) {\r\n        this.dialogType = 'edit'\r\n        this.dialogVisible = true\r\n        this.checkStrictly = true\r\n        this.user = deepClone(scope.row)\r\n        this.$nextTick(() => {\r\n          const roles = this.generateRoles(this.rolesData)\r\n          this.$refs.tree.setCheckedNodes(this.generateArr(this.user.roles))\r\n          // set checked state of a node not affects its father and child nodes\r\n          this.checkStrictly = false\r\n        })\r\n      },\r\n      handleDelete({\r\n        $index,\r\n        row\r\n      }) {\r\n        if (row.id == 1) {\r\n          this.$message({\r\n            type: 'warning',\r\n            message: '超级管理员无法删除!'\r\n          })\r\n          return\r\n        }\r\n        this.$confirm('确定删除此用户?', '提示', {\r\n            confirmButtonText: '确认',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          })\r\n          .then(async () => {\r\n            await this.api.user().delSysUser({\r\n              'id': row.id\r\n            })\r\n            this.usersList.splice($index, 1)\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功!'\r\n            })\r\n          })\r\n          .catch(err => {\r\n            console.error(err)\r\n          })\r\n      },\n     handleResetPWD({\r\n        $index,\r\n        row\r\n      }){\n        if (row.id == 1) {\n          this.$message({\n            type: 'warning',\n            message: '超级管理员无法重置!'\n          })\n          return\n        }\n        this.$confirm('确定重置此用户密码?', '提示', {\n            confirmButtonText: '确认',\n            cancelButtonText: '取消',\n            type: 'warning'\n          })\n          .then(async () => {\n            const {\n              data\n            } = await this.api.user().resetSysPWD({\n              'id': row.id\n            })\n            if (data == 1) {\n              this.$message({\n                type: 'success',\n                message: '密码重置成功!'\n              })\n            } else {\n              this.$message({\n                type: 'fail',\n                message: '密码重置失败!'\n              })\n            }\n\n          })\n          .catch(err => {\n            console.error(err)\n          })\n      },\r\n      async confirmuser() {\r\n        const isEdit = this.dialogType === 'edit'\r\n\r\n        const checkedKeys = this.$refs.tree.getCheckedKeys()\r\n        this.user.roleIds = checkedKeys.join(',')\r\n\r\n        if (isEdit) {\r\n          const {\r\n            data\r\n          } = await this.api.user().updateSysUser(this.user)\r\n          this.user.roles = data.roles\r\n          for (let index = 0; index < this.usersList.length; index++) {\r\n            if (this.usersList[index].id === this.user.id) {\r\n              this.usersList.splice(index, 1, Object.assign({}, this.user))\r\n              break\r\n            }\r\n          }\r\n        } else {\r\n          const {\r\n            data\r\n          } = await this.api.user().addSysUser(this.user)\r\n          this.user = data\r\n          this.usersList.push(this.user)\r\n        }\r\n\r\n        const {\r\n          id,\r\n          username,\r\n          name\r\n        } = this.user\r\n        this.dialogVisible = false\r\n        this.$notify({\r\n          title: 'Success',\r\n          dangerouslyUseHTMLString: true,\r\n          message: `\r\n            <div>用户ID: ${id}</div>\r\n            <div>用户名: ${username}</div>\r\n            <div>真实姓名: ${name}</div>\r\n          `,\r\n          type: 'success'\r\n        })\r\n      },\n\n      async switchChange(obj) {\n        const res = await this.api.user().sysUpdateUserStatus(obj)\n        if (res.code == 1) {\n          this.$message.success('操作成功')\n        } else {\n          if (obj.status == 1) {\n            obj.status = 0\n          } else {\n            obj.status = 1\n          }\n          this.$message.error('操作失败')\n        }\n      },\n\r\n      beforeUpload(file) {\r\n        const isLt1M = file.size / 1024 / 1024 < 1;\r\n        if (!isLt1M) {\r\n          this.$message.error('文件大小不能超过 1M !');\r\n        }\r\n        return isLt1M;\r\n      },\r\n      httpRequest({\r\n        file\r\n      }) {\r\n        let that = this\r\n        //注意哦，这里指定文件夹'image/'，尝试过写在配置文件，但是各种不行，写在这里就可以\r\n        var fileName = 'mhjy/' + 'header' + getFileNameUUID() + '.jpg';\r\n        client().put(fileName, file).then(({\r\n          res,\r\n          url,\r\n          name\r\n        }) => {\r\n          if (res && res.status == 200) {\r\n            // console.log(`阿里云OSS上传文件成功回调`, res, url, name);\r\n            this.user.avatar = url;\n            console.log(url)\r\n          }\r\n        }).catch((err) => {\r\n          console.log(`阿里云OSS上传失败回调`, err);\r\n        });\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .app-container {\r\n    .roles-table {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .permission-tree {\r\n      margin-bottom: 30px;\r\n    }\r\n\r\n    .image-uploader {\r\n      background-color: #5cd7f7;\r\n      width: 80px;\r\n      height: 80px;\r\n      border-radius: 40px;\r\n      color: #000000;\r\n    }\r\n  }\r\n</style>\n"]}]}