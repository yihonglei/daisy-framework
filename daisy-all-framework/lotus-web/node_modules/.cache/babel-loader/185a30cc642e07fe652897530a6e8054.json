{"remainingRequest":"/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/node_modules/babel-loader/lib/index.js!/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/src/components/Tinymce/components/EditorImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/src/components/Tinymce/components/EditorImage.vue","mtime":1657164828402},{"path":"/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/babel.config.js","mtime":1657164828372},{"path":"/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_ly/Documents/HBuilderProjects/mhjymanager/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLXNlYXJjaC1wYXJhbXMuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLyBpbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ2FwaS9xaW5pdScKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdFZGl0b3JTbGlkZVVwbG9hZCcsCiAgcHJvcHM6IHsKICAgIGNvbG9yOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJyMxODkwZmYnCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGxpc3RPYmo6IHt9LAogICAgICBmaWxlTGlzdDogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGVja0FsbFN1Y2Nlc3M6IGZ1bmN0aW9uIGNoZWNrQWxsU3VjY2VzcygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLmxpc3RPYmopLmV2ZXJ5KGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLmxpc3RPYmpbaXRlbV0uaGFzU3VjY2VzczsKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlU3VibWl0OiBmdW5jdGlvbiBoYW5kbGVTdWJtaXQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGFyciA9IE9iamVjdC5rZXlzKHRoaXMubGlzdE9iaikubWFwKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi5saXN0T2JqW3ZdOwogICAgICB9KTsKCiAgICAgIGlmICghdGhpcy5jaGVja0FsbFN1Y2Nlc3MoKSkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UoJ1BsZWFzZSB3YWl0IGZvciBhbGwgaW1hZ2VzIHRvIGJlIHVwbG9hZGVkIHN1Y2Nlc3NmdWxseS4gSWYgdGhlcmUgaXMgYSBuZXR3b3JrIHByb2JsZW0sIHBsZWFzZSByZWZyZXNoIHRoZSBwYWdlIGFuZCB1cGxvYWQgYWdhaW4hJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLiRlbWl0KCdzdWNjZXNzQ0JLJywgYXJyKTsKICAgICAgdGhpcy5saXN0T2JqID0ge307CiAgICAgIHRoaXMuZmlsZUxpc3QgPSBbXTsKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICB9LAogICAgaGFuZGxlU3VjY2VzczogZnVuY3Rpb24gaGFuZGxlU3VjY2VzcyhyZXNwb25zZSwgZmlsZSkgewogICAgICB2YXIgdWlkID0gZmlsZS51aWQ7CiAgICAgIHZhciBvYmpLZXlBcnIgPSBPYmplY3Qua2V5cyh0aGlzLmxpc3RPYmopOwoKICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IG9iaktleUFyci5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgIGlmICh0aGlzLmxpc3RPYmpbb2JqS2V5QXJyW2ldXS51aWQgPT09IHVpZCkgewogICAgICAgICAgdGhpcy5saXN0T2JqW29iaktleUFycltpXV0udXJsID0gcmVzcG9uc2UuZmlsZXMuZmlsZTsKICAgICAgICAgIHRoaXMubGlzdE9ialtvYmpLZXlBcnJbaV1dLmhhc1N1Y2Nlc3MgPSB0cnVlOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGhhbmRsZVJlbW92ZTogZnVuY3Rpb24gaGFuZGxlUmVtb3ZlKGZpbGUpIHsKICAgICAgdmFyIHVpZCA9IGZpbGUudWlkOwogICAgICB2YXIgb2JqS2V5QXJyID0gT2JqZWN0LmtleXModGhpcy5saXN0T2JqKTsKCiAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBvYmpLZXlBcnIubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICBpZiAodGhpcy5saXN0T2JqW29iaktleUFycltpXV0udWlkID09PSB1aWQpIHsKICAgICAgICAgIGRlbGV0ZSB0aGlzLmxpc3RPYmpbb2JqS2V5QXJyW2ldXTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBiZWZvcmVVcGxvYWQ6IGZ1bmN0aW9uIGJlZm9yZVVwbG9hZChmaWxlKSB7CiAgICAgIHZhciBfc2VsZiA9IHRoaXM7CgogICAgICB2YXIgX1VSTCA9IHdpbmRvdy5VUkwgfHwgd2luZG93LndlYmtpdFVSTDsKCiAgICAgIHZhciBmaWxlTmFtZSA9IGZpbGUudWlkOwogICAgICB0aGlzLmxpc3RPYmpbZmlsZU5hbWVdID0ge307CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgdmFyIGltZyA9IG5ldyBJbWFnZSgpOwogICAgICAgIGltZy5zcmMgPSBfVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlKTsKCiAgICAgICAgaW1nLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF9zZWxmLmxpc3RPYmpbZmlsZU5hbWVdID0gewogICAgICAgICAgICBoYXNTdWNjZXNzOiBmYWxzZSwKICAgICAgICAgICAgdWlkOiBmaWxlLnVpZCwKICAgICAgICAgICAgd2lkdGg6IHRoaXMud2lkdGgsCiAgICAgICAgICAgIGhlaWdodDogdGhpcy5oZWlnaHQKICAgICAgICAgIH07CiAgICAgICAgfTsKCiAgICAgICAgcmVzb2x2ZSh0cnVlKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AAEA;EACAA,yBADA;EAEAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CAFA;EAQAC,IARA,kBAQA;IACA;MACAC,oBADA;MAEAC,WAFA;MAGAC;IAHA;EAKA,CAdA;EAeAC;IACAC,eADA,6BACA;MAAA;;MACA;QAAA;MAAA;IACA,CAHA;IAIAC,YAJA,0BAIA;MAAA;;MACA;QAAA;MAAA;;MACA;QACA;QACA;MACA;;MACA;MACA;MACA;MACA;IACA,CAdA;IAeAC,aAfA,yBAeAC,QAfA,EAeAC,IAfA,EAeA;MACA;MACA;;MACA;QACA;UACA;UACA;UACA;QACA;MACA;IACA,CAzBA;IA0BAC,YA1BA,wBA0BAD,IA1BA,EA0BA;MACA;MACA;;MACA;QACA;UACA;UACA;QACA;MACA;IACA,CAnCA;IAoCAE,YApCA,wBAoCAF,IApCA,EAoCA;MACA;;MACA;;MACA;MACA;MACA;QACA;QACAG;;QACAA;UACAC;YAAAC;YAAAC;YAAAC;YAAAC;UAAA;QACA,CAFA;;QAGAC;MACA,CAPA;IAQA;EAjDA;AAfA","names":["name","props","color","type","default","data","dialogVisible","listObj","fileList","methods","checkAllSuccess","handleSubmit","handleSuccess","response","file","handleRemove","beforeUpload","img","_self","hasSuccess","uid","width","height","resolve"],"sourceRoot":"src/components/Tinymce/components","sources":["EditorImage.vue"],"sourcesContent":["<template>\n  <div class=\"upload-container\">\n    <el-button :style=\"{background:color,borderColor:color}\" icon=\"el-icon-upload\" size=\"mini\" type=\"primary\" @click=\" dialogVisible=true\">\n      upload\n    </el-button>\n    <el-dialog :visible.sync=\"dialogVisible\">\n      <el-upload\n        :multiple=\"true\"\n        :file-list=\"fileList\"\n        :show-file-list=\"true\"\n        :on-remove=\"handleRemove\"\n        :on-success=\"handleSuccess\"\n        :before-upload=\"beforeUpload\"\n        class=\"editor-slide-upload\"\n        action=\"https://httpbin.org/post\"\n        list-type=\"picture-card\"\n      >\n        <el-button size=\"small\" type=\"primary\">\n          Click upload\n        </el-button>\n      </el-upload>\n      <el-button @click=\"dialogVisible = false\">\n        Cancel\n      </el-button>\n      <el-button type=\"primary\" @click=\"handleSubmit\">\n        Confirm\n      </el-button>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n// import { getToken } from 'api/qiniu'\n\nexport default {\n  name: 'EditorSlideUpload',\n  props: {\n    color: {\n      type: String,\n      default: '#1890ff'\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      listObj: {},\n      fileList: []\n    }\n  },\n  methods: {\n    checkAllSuccess() {\n      return Object.keys(this.listObj).every(item => this.listObj[item].hasSuccess)\n    },\n    handleSubmit() {\n      const arr = Object.keys(this.listObj).map(v => this.listObj[v])\n      if (!this.checkAllSuccess()) {\n        this.$message('Please wait for all images to be uploaded successfully. If there is a network problem, please refresh the page and upload again!')\n        return\n      }\n      this.$emit('successCBK', arr)\n      this.listObj = {}\n      this.fileList = []\n      this.dialogVisible = false\n    },\n    handleSuccess(response, file) {\n      const uid = file.uid\n      const objKeyArr = Object.keys(this.listObj)\n      for (let i = 0, len = objKeyArr.length; i < len; i++) {\n        if (this.listObj[objKeyArr[i]].uid === uid) {\n          this.listObj[objKeyArr[i]].url = response.files.file\n          this.listObj[objKeyArr[i]].hasSuccess = true\n          return\n        }\n      }\n    },\n    handleRemove(file) {\n      const uid = file.uid\n      const objKeyArr = Object.keys(this.listObj)\n      for (let i = 0, len = objKeyArr.length; i < len; i++) {\n        if (this.listObj[objKeyArr[i]].uid === uid) {\n          delete this.listObj[objKeyArr[i]]\n          return\n        }\n      }\n    },\n    beforeUpload(file) {\n      const _self = this\n      const _URL = window.URL || window.webkitURL\n      const fileName = file.uid\n      this.listObj[fileName] = {}\n      return new Promise((resolve, reject) => {\n        const img = new Image()\n        img.src = _URL.createObjectURL(file)\n        img.onload = function() {\n          _self.listObj[fileName] = { hasSuccess: false, uid: file.uid, width: this.width, height: this.height }\n        }\n        resolve(true)\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.editor-slide-upload {\n  margin-bottom: 20px;\n  ::v-deep .el-upload--picture-card {\n    width: 100%;\n  }\n}\n</style>\n"]}]}