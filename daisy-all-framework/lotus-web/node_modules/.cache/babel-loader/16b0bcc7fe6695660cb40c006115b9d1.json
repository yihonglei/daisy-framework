{"remainingRequest":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/babel-loader/lib/index.js!/Users/hq_ly/mhjy/mhjy_manager/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hq_ly/mhjy/mhjy_manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hq_ly/mhjy/mhjy_manager/src/views/permission/role.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hq_ly/mhjy/mhjy_manager/src/views/permission/role.vue","mtime":1660530975032},{"path":"/Users/hq_ly/mhjy/mhjy_manager/babel.config.js","mtime":1657164828372},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["id","name","intro","routes","data","role","rolesList","dialogVisible","dialogType","checkStrictly","defaultProps","children","label","title","computed","routesData","created","methods","checkPermission","getRoutes","res","getRoles","token","generateRoutes","route","path","generateArr","handleAddRole","handleEdit","scope","handleDelete","type","message","confirmButtonText","cancelButtonText","then","catch","console","confirmRole","isEdit","checkedKeys","routeIds","index","dangerouslyUseHTMLString","generateTreeRouteIds","generateTree","onlyOneShowingChild","onlyOneChild","noShowingChildren"],"sourceRoot":"src/views/permission","sources":["role.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-button v-if=\"checkPermission(['admin'])\" type=\"primary\" @click=\"handleAddRole\">新建角色</el-button>\n\n    <el-table :data=\"rolesList\" style=\"width: 100%;margin-top:30px;\" border>\n      <el-table-column align=\"center\" label=\"ID\" width=\"220\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.id }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"角色名称\" width=\"220\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.name }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"header-center\" label=\"角色描述\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.intro }}\n        </template>\n      </el-table-column>\n      <el-table-column v-if=\"checkPermission(['admin'])\" align=\"center\" label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\">编辑</el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog :visible.sync=\"dialogVisible\" :title=\"dialogType==='edit'?'编辑角色':'新建角色'\">\n      <el-form :model=\"role\" label-width=\"80px\" label-position=\"left\">\n        <el-form-item label=\"角色名称\">\n          <el-input v-model=\"role.name\" placeholder=\"角色名称\" />\n        </el-form-item>\n        <el-form-item label=\"角色描述\">\n          <el-input\n            v-model=\"role.intro\"\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\n            type=\"textarea\"\n            placeholder=\"角色描述\"\n          />\n        </el-form-item>\n        <el-form-item label=\"权限菜单\">\n          <el-tree\n            ref=\"tree\"\n            :check-strictly=\"checkStrictly\"\n            :data=\"routesData\"\n            :props=\"defaultProps\"\n            show-checkbox\n            node-key=\"id\"\n            class=\"permission-tree\"\n          />\n        </el-form-item>\n      </el-form>\n      <div style=\"text-align:right;\">\n        <el-button type=\"danger\" @click=\"dialogVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmRole\">提交</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport path from 'path'\nimport { deepClone } from '@/utils'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\nimport checkPermission from '@/utils/permission' // 权限判断函数\n\nconst defaultRole = {\n  id: 0,\n  name: '',\n  intro: '',\n  routes: []\n}\n\nexport default {\n  data() {\n    return {\n      role: Object.assign({}, defaultRole),\n      routes: [],\n      rolesList: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      checkStrictly: false,\n      defaultProps: {\n        children: 'children',\n        label: 'title',\n        title: 'title',\n        id: 0\n      }\n    }\n  },\n  computed: {\n    routesData() {\n      return this.routes\n    }\n  },\n  created() {\n    // Mock: get all routes and roles list from server\n    this.getRoutes()\n    this.getRoles()\n  },\n  methods: {\n    checkPermission,\n    async getRoutes() {\n      const res = await this.api.role().getRoutes()\n      this.serviceRoutes = res.data\n\n      this.routes = this.generateRoutes(res.data)\n    },\n    async getRoles() {\n      const res = await this.api.role().getRoles({token:getToken()})\n      this.rolesList = res.data\n    },\n\n    // Reshape the routes structure so that it looks the same as the sidebar\n    generateRoutes(routes, basePath = '/') {\n      const res = []\n\n      for (let route of routes) {\n        // skip some route\n        if (route.hidden) { continue }\n\n        const onlyOneShowingChild = this.onlyOneShowingChild(route.children, route)\n\n        if (route.children && onlyOneShowingChild && !route.alwaysShow) {\n          route = onlyOneShowingChild\n        }\n\n        const data = {\n          path: path.resolve(basePath, route.path),\n          title: route.title,\n          label: route.title,\n          id: route.id\n        }\n\n        // recursive child routes\n        if (route.children) {\n          data.children = this.generateRoutes(route.children, data.path)\n        }\n        res.push(data)\n      }\n      return res\n    },\n    generateArr(routes) {\n      let data = []\n      routes.forEach(route => {\n        data.push(route)\n        if (route.children) {\n          const temp = this.generateArr(route.children)\n          if (temp.length > 0) {\n            data = [...data, ...temp]\n          }\n        }\n      })\n      return data\n    },\n    handleAddRole() {\n      this.role = Object.assign({}, defaultRole)\n      if (this.$refs.tree) {\n        this.$refs.tree.setCheckedNodes([])\n      }\n      this.dialogType = 'new'\n      this.dialogVisible = true\n    },\n    handleEdit(scope) {\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.role = deepClone(scope.row)\n      this.$nextTick(() => {\n        const routes = this.generateRoutes(this.role.routes)\n        this.$refs.tree.setCheckedNodes(this.generateArr(routes))\n        // set checked state of a node not affects its father and child nodes\n        this.checkStrictly = false\n      })\n    },\n    handleDelete({ $index, row }) {\n      if (row.id == 1) {\n        this.$message({\n          type: 'warning',\n          message: '超级管理员无法删除!'\n        })\n        return\n      }\n      this.$confirm('确定删除此角色?', '提示', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(async() => {\n          await this.api.role().deleteRole({'id':row.id})\n          this.rolesList.splice($index, 1)\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          })\n        })\n        .catch(err => { console.error(err) })\n    },\n    async confirmRole() {\n      const isEdit = this.dialogType === 'edit'\n\n      const checkedKeys = this.$refs.tree.getCheckedKeys()\n\n      let routes = this.generateTree(deepClone(this.serviceRoutes), -1, checkedKeys)\n\n      let routeIds = []\n      this.generateTreeRouteIds(routes, routeIds);\n      this.role.routeIds = routeIds.join(',')\n\n      if (isEdit) {\n        const { data } = await this.api.role().updateRole(this.role)\n        this.role.routes = data.routes\n        for (let index = 0; index < this.rolesList.length; index++) {\n          if (this.rolesList[index].id === this.role.id) {\n            this.rolesList.splice(index, 1, Object.assign({}, this.role))\n            break\n          }\n        }\n      } else {\n        const { data } = await this.api.role().addRole(this.role)\n        this.role.id = data.id\n        this.role.routes = data.routes\n        this.rolesList.push(this.role)\n      }\n\n      const { id, name, intro } = this.role\n      this.dialogVisible = false\n      this.$notify({\n        title: 'Success',\n        dangerouslyUseHTMLString: true,\n        message: `\n            <div>角色ID: ${id}</div>\n            <div>角色名称: ${name}</div>\n            <div>角色描述: ${intro}</div>\n          `,\n        type: 'success'\n      })\n    },\n\n    generateTreeRouteIds(routes, routeIds) {\n      const res = []\n\n      for (const route of routes) {\n        routeIds.push(route.id)\n\n        if (route.children) {\n          const tmpRes = this.generateTreeRouteIds(route.children, routeIds)\n        }\n      }\n      return routeIds\n    },\n    generateTree(routes, routeId = -1, checkedKeys) {\n      const res = []\n\n      for (const route of routes) {\n        const routeId = route.id//path.resolve(basePath, route.path)\n\n        // recursive child routes\n        if (route.children) {\n          route.children = this.generateTree(route.children, routeId, checkedKeys)\n        }\n\n        if (checkedKeys.includes(routeId) || (route.children && route.children.length >= 1)) {\n          res.push(route)\n        }\n      }\n      return res\n    },\n\n    // reference: src/view/layout/components/Sidebar/SidebarItem.vue\n    onlyOneShowingChild(children = [], parent) {\n      let onlyOneChild = null\n      const showingChildren = children.filter(item => !item.hidden)\n\n      // When there is only one child route, the child route is displayed by default\n      if (showingChildren.length === 1) {\n        onlyOneChild = showingChildren[0]\n        onlyOneChild.path = path.resolve(parent.path, onlyOneChild.path)\n        return onlyOneChild\n      }\n\n      // Show parent if there are no child route to display\n      if (showingChildren.length === 0) {\n        onlyOneChild = { ... parent, path: '', noShowingChildren: true }\n        return onlyOneChild\n      }\n\n      return false\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.app-container {\n  .roles-table {\n    margin-top: 30px;\n  }\n  .permission-tree {\n    margin-bottom: 30px;\n  }\n}\n</style>\n"]}]}