{"remainingRequest":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/babel-loader/lib/index.js!/Users/hq_ly/mhjy/mhjy_manager/node_modules/eslint-loader/index.js??ref--13-0!/Users/hq_ly/mhjy/mhjy_manager/src/api/group/user.js","dependencies":[{"path":"/Users/hq_ly/mhjy/mhjy_manager/src/api/group/user.js","mtime":1660533186142},{"path":"/Users/hq_ly/mhjy/mhjy_manager/babel.config.js","mtime":1657164828372},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hq_ly/mhjy/mhjy_manager/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["request","api","login","data","url","method","getInfo","logout","getSysUsersList","addSysUser","updateSysUser","delSysUser","resetSysPWD","modifySysPWD","companyUserList","sysUpdateUserStatus","sysUpdateUserEnable"],"sources":["/Users/hq_ly/mhjy/mhjy_manager/src/api/group/user.js"],"sourcesContent":["import request from '../request/request.js'\r\n\r\nconst api = function() {\r\n  return {\r\n    async login(data) {\n      return await request({\r\n        url: '/sys/api/doLogin', //'/vue-element-admin/user/login',\r\n        method: 'post',\r\n        data\r\n      })\r\n    },\r\n\r\n    async getInfo(data) {\r\n      return await request({\r\n        url: '/sys/api/userinfo', //'/vue-element-admin/user/info',\r\n        method: 'post',\r\n        data\r\n      })\r\n    },\r\n\r\n   async logout(data) {\r\n      return await request({\r\n        url: '/sys/api/logout', //'/vue-element-admin/user/logout',\r\n        method: 'post',\r\n        data\r\n      })\r\n    },\r\n\r\n   async getSysUsersList(data) {\r\n      return await request({\r\n        url: '/sys/api/getSysUsersList', //'/vue-element-admin/user/logout',\r\n        method: 'post',\r\n        data\r\n      })\r\n    },\r\n\r\n   async addSysUser(data) {\r\n      return await request({\r\n        url: '/sys/api/addSysUser', //'/vue-element-admin/user/logout',\r\n        method: 'post',\r\n        data\r\n      })\r\n    },\r\n\r\n   async updateSysUser(data) {\r\n      return await request({\r\n        url: '/sys/api/updateSysUser', //'/vue-element-admin/user/logout',\r\n        method: 'post',\r\n        data\r\n      })\r\n    },\r\n\r\n   async delSysUser(data) {\r\n      return await request({\r\n        url: '/sys/api/delSysUser', //'/vue-element-admin/user/logout',\r\n        method: 'post',\r\n        data\r\n      })\r\n    },\r\n\r\n   async resetSysPWD(data) {\r\n      return await request({\r\n        url: '/sys/api/resetSysPWD', //'/vue-element-admin/user/logout',\r\n        method: 'post',\r\n        data\r\n      })\r\n    },\r\n\r\n   async modifySysPWD(data) {\r\n      return await request({\r\n        url: '/sys/api/modifySysPWD', //'/vue-element-admin/user/logout',\r\n        method: 'post',\r\n        data\r\n      })\r\n    },\n\n    async companyUserList(data) {\n      return await request({\n        url: '/sys/api/companyUserList', //'/vue-element-admin/user/logout',\n        method: 'post',\n        data\n      })\n    },\n\n    async sysUpdateUserStatus(data) {\n       return await request({\n         url: '/sys/api/sysUpdateUserStatus', //'/vue-element-admin/routes',\n         method: 'post',\n         data\n       })\n     },\n     \n     async sysUpdateUserEnable(data) {\n        return await request({\n          url: '/sys/api/sysUpdateUserEnable', //'/vue-element-admin/routes',\n          method: 'post',\n          data\n        })\n      },\n     \n\r\n  };\r\n};\n\nexport default api;\n"],"mappings":"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"}]}