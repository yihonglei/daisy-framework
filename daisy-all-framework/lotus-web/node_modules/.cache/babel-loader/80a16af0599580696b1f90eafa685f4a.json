{"remainingRequest":"/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/node_modules/thread-loader/dist/cjs.js!/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/node_modules/babel-loader/lib/index.js!/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/src/api/group/role.js","dependencies":[{"path":"/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/src/api/group/role.js","mtime":1660153424000},{"path":"/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/babel.config.js","mtime":1657164828000},{"path":"/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hongqi/Documents/jpeony/daisy-framework/daisy-all-framework/mhjy_manager/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL2hvbmdxaS9Eb2N1bWVudHMvanBlb255L2RhaXN5LWZyYW1ld29yay9kYWlzeS1hbGwtZnJhbWV3b3JrL21oanlfbWFuYWdlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcmVnZW5lcmF0b3JSdW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9ob25ncWkvRG9jdW1lbnRzL2pwZW9ueS9kYWlzeS1mcmFtZXdvcmsvZGFpc3ktYWxsLWZyYW1ld29yay9taGp5X21hbmFnZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgcmVxdWVzdCBmcm9tICcuLi9yZXF1ZXN0L3JlcXVlc3QuanMnOwoKdmFyIGFwaSA9IGZ1bmN0aW9uIGFwaSgpIHsKICByZXR1cm4gewogICAgZ2V0Um91dGVzOiBmdW5jdGlvbiBnZXRSb3V0ZXMoZGF0YSkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3QoewogICAgICAgICAgICAgICAgICB1cmw6ICcvc3lzL2FwaS9hbGxSb3V0ZXMnLAogICAgICAgICAgICAgICAgICAvLycvdnVlLWVsZW1lbnQtYWRtaW4vcm91dGVzJywKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dC5zZW50KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldFJvbGVzOiBmdW5jdGlvbiBnZXRSb2xlcyhkYXRhKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVxdWVzdCh7CiAgICAgICAgICAgICAgICAgIHVybDogJy9zeXMvYXBpL2FsbFJvbGVzJywKICAgICAgICAgICAgICAgICAgLy8nL3Z1ZS1lbGVtZW50LWFkbWluL3JvbGVzJywKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQyLnNlbnQpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBhZGRSb2xlOiBmdW5jdGlvbiBhZGRSb2xlKGRhdGEpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiByZXF1ZXN0KHsKICAgICAgICAgICAgICAgICAgdXJsOiAnL3N5cy9hcGkvYWRkUm9sZScsCiAgICAgICAgICAgICAgICAgIC8vICAnL3Z1ZS1lbGVtZW50LWFkbWluL3JvbGUnLAogICAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDMuc2VudCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHVwZGF0ZVJvbGU6IGZ1bmN0aW9uIHVwZGF0ZVJvbGUoZGF0YSkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3QoewogICAgICAgICAgICAgICAgICB1cmw6ICcvc3lzL2FwaS9lZGl0Um9sZScsCiAgICAgICAgICAgICAgICAgIC8vYC92dWUtZWxlbWVudC1hZG1pbi9yb2xlLyR7aWR9YCwKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQ0LnNlbnQpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBkZWxldGVSb2xlOiBmdW5jdGlvbiBkZWxldGVSb2xlKGRhdGEpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiByZXF1ZXN0KHsKICAgICAgICAgICAgICAgICAgdXJsOiAnL3N5cy9hcGkvZGVsUm9sZScsCiAgICAgICAgICAgICAgICAgIC8vYC92dWUtZWxlbWVudC1hZG1pbi9yb2xlLyR7aWR9YCwKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnZGVsZXRlJywKICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDUuc2VudCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNSk7CiAgICAgIH0pKSgpOwogICAgfQogIH07Cn07CgpleHBvcnQgZGVmYXVsdCBhcGk7"},null]}