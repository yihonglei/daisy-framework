<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <conversionRule conversionWord="logSort" converterClass="com.jpeony.common.logback.LogSort"/>
    <conversionRule conversionWord="tab" converterClass="com.jpeony.common.logback.LogTab"/>
    <property name="appName" value="daisy-api"/>
    <springProperty scope="context" name="ACTIVE_PROFILE" source="spring.profiles.active"/>
    <!-- 开发环境日志配置 -->
    <springProfile name="dev">
        <property name="LOG_HOME" value="log"/>
    </springProfile>

    <!-- 测试环境日志配置 -->
    <springProfile name="test">
        <property name="LOG_HOME" value="/u01/${appName}/log"/>
    </springProfile>

    <!-- 预生产环境日志配置 -->
    <springProfile name="pre">
        <property name="LOG_HOME" value="/u01/${appName}/log"/>
    </springProfile>

    <!-- 生产环境日志配置 -->
    <springProfile name="prod">
        <property name="LOG_HOME" value="/u01/${appName}/log"/>
    </springProfile>

    <!-- console appender -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoder 默认配置为PatternLayoutEncoder -->
        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{15} [%M:%L] %X{traceId} %X{orderNo} %X{NG_TRACE_ID} %logSort - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- all appender -->
    <appender name="allLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/${appName}.all.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_HOME}/history/%d{yyyyMM,aux}/${appName}.all.log.%d{yyyyMMdd}</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{15} [%M:%L] %X{traceId} %X{orderNo} %X{NG_TRACE_ID} %logSort - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- error appender -->
    <appender name="errorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <File>${LOG_HOME}/${appName}.error.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/history/%d{yyyyMM,aux}/${appName}.error.log.%d{yyyyMMdd}</FileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{15} [%M:%L] %X{traceId} %X{orderNo} %X{NG_TRACE_ID} %logSort - %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- sql appender -->
    <appender name="sqlLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/${appName}.sql.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_HOME}/history/%d{yyyyMM,aux}/${appName}.sql.log.%d{yyyyMMdd}</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{15} [%M:%L] %X{traceId} %X{orderNo} %X{NG_TRACE_ID} %logSort - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- http 第三方调用日志 -->
    <appender name="thirdLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/third.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/history/%d{yyyyMM,aux}/third.log.%d{yyyy-MM-dd}</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss:SSS} %X{traceId} %X{orderNo} %X{NG_TRACE_ID} - %message%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <!-- 接口请求参数输入输出日志打印 -->
    <appender name="reqInterceptor" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/req_interceptor.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/history/%d{yyyyMM,aux}/req_interceptor.log.%d{yyyy-MM-dd}</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>{"createTime":"%d{yyyy-MM-dd HH:mm:ss.SSS}","payload":%message}%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <!-- 异步输出日志到文件 -->
    <!-- errorLogFile 异步输出 -->
    <appender name="errorLogFile" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>2048</queueSize>
        <IncludeCallerData>true</IncludeCallerData>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="errorLog"/>
    </appender>

    <!-- allLogFile 异步输出 -->
    <appender name="allLogFile" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>2048</queueSize>
        <IncludeCallerData>true</IncludeCallerData>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="allLog"/>
    </appender>

    <!-- sqlLogFile 异步输出 -->
    <appender name ="sqlLogFile" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>2048</queueSize>
        <IncludeCallerData>true</IncludeCallerData>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="sqlLog"/>
    </appender>

    <!-- thirdLogFile 异步输出 -->
    <appender name ="thirdLogFile" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold >0</discardingThreshold>
        <neverBlock>true</neverBlock>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="thirdLog"/>
    </appender>

    <!-- reqInterceptorFile 异步输入参数日志 -->
    <appender name="reqInterceptorFile" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <neverBlock>true</neverBlock>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 添加附加的appender ，每个异步日志打印仅支持一个appender-->
        <appender-ref ref="reqInterceptor"/>
    </appender>

    <!-- 开发环境日志配置 -->
    <springProfile name="dev">
        <!-- loggers -->
        <logger name="com.jpeony.core.mapper" additivity="false" >
            <level value="DEBUG"/>
            <appender-ref ref="sqlLogFile"/>
        </logger>
        <root level="INFO">
            <appender-ref ref="errorLogFile"/>
            <appender-ref ref="allLogFile"/>
            <appender-ref ref="console"/>
        </root>
    </springProfile>
    <!--测试环境日志配置-->
    <springProfile name="test">
        <!-- loggers -->
        <logger name="com.jpeony.core.mapper" additivity="false" >
            <level value="DEBUG"/>
            <appender-ref ref="sqlLogFile"/>
        </logger>
        <root level="INFO">
            <appender-ref ref="errorLogFile"/>
            <appender-ref ref="allLogFile"/>
            <appender-ref ref="console"/>
        </root>
    </springProfile>

    <!--预生产环境日志配置-->
    <springProfile name="pre">
        <!-- loggers -->
        <logger name="com.jpeony.core.mapper" additivity="false" >
            <level value="DEBUG"/>
            <appender-ref ref="sqlLogFile"/>
        </logger>
        <root level="INFO">
            <appender-ref ref="errorLogFile"/>
            <appender-ref ref="allLogFile"/>
        </root>
    </springProfile>

    <!--生产环境日志配置-->
    <springProfile name="prod">
        <!-- loggers -->
        <logger name="com.jpeony.core.mapper" additivity="false" >
            <level value="INFO"/>
            <appender-ref ref="sqlLogFile"/>
        </logger>
        <root level="INFO">
            <appender-ref ref="errorLogFile"/>
            <appender-ref ref="allLogFile"/>
        </root>
    </springProfile>
</configuration>
